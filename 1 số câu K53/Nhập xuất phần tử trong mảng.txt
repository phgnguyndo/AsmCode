; AddTwo.asm - adds two 32-bit integers.
; Chapter 3 example
INCLUDE Irvine32.inc
.386
.model flat,stdcall
.stack 4096
ExitProcess proto,dwExitCode:dword
ReadArr PROTO, pArr:PTR DWORD ,Count:DWORD
Print PROTO,pArr:PTR DWORD ,Count:DWORD
.data
arr dword 50 dup (?)
arrSize dword ?
msg_01 db 'Nhap so phan tu: ',0
msg_02 db 'Nhap cac phan tu: ',0
msg_03 db 'In phan tu: ',0
.code
main proc    
     MOV EDX,offset msg_01
     call WriteString
     call ReadDec
     MOV arrSize,EAX

     INVOKE ReadArr,ADDR arr, arrSize
     INVOKE Print,ADDR arr, arrSize
	invoke ExitProcess,0
main endp
ReadArr PROC uses eax ebx ecx edx, pArr:PTR DWORD ,Count:DWORD
     MOV ECX,Count
     MOV EDI,pArr
lap:
     MOV EDX,offset msg_02
     call WriteString
     call ReadInt
     MOV [EDI],EAX
     ADD EDI,TYPE pArr
     LOOP lap
     ret
ReadArr ENDP
Print PROC uses eax ebx ecx edx, pArr:PTR DWORD ,Count:DWORD
     MOV ECX,Count
     MOV EDI,pArr
     MOV EDX,offset msg_03
     call WriteString
lap:     
     MOV EAX,[EDI]
     call WriteInt
     MOV AL,' '
     CALL WriteChar
     ADD EDI,TYPE pArr
     LOOP lap
     ret
Print ENDP
end main